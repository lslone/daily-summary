streaming {
  StreamingSyncEventMulti {
    name = "StreamingSyncEventMulti"
    stop.enable = false
    close.port = 20000
    batch.duration = 5

    ## zk
    zk.servers = ${common.zk.servers}

    spark {
      log.level = ${common.spark.log.level}
      shuffle.partition = ${common.spark.shuffle.partition}
      streaming.kafka.maxRatePerPartition = ${common.spark.streaming.kafka.maxRatePerPartition}
    }

    kafka {
      group.id = ${common.biz.code}"""_StreamingSyncEventMulti"""
      input.topic = ${common.biz.code}"""-event-multi-dynamic"""
      input.servers = ${common.kafka.servers}
      receive.buffer.bytes = ${common.kafka.receive.buffer.bytes}
      max.partition.fetch.bytes = ${common.kafka.max.partition.fetch.bytes}
      auto.offset.reset = ${common.kafka.auto.offset.reset}
      enable.auto.commit = ${common.kafka.enable.auto.commit}
    }

    result {
      url = """jdbc:postgresql://"""${common.db.gp.address}"""/"""${common.biz.code}"""_odl"""
      table = """odl_"""${common.biz.code}"""_event_multi"""
    }
  }
}

